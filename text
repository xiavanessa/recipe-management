You are tasked with building a recipe management application that allows users to create, view, and search for recipes. The application should have a backend built with Node.js, and a frontend built with Angular (Or HTML,CSS and Javascript if no knowledge of Angular).

Backend Requirements:

Create a RESTful API to handle the following endpoints:
/api/recipes (GET): Retrieve a list of all recipes.
/api/recipes (POST): Create a new recipe.
/api/recipes/:id (GET): Retrieve a specific recipe by ID.
/api/recipes/:id (PUT): Update a specific recipe by ID.
/api/recipes/:id (DELETE): Delete a specific recipe by ID.

Note: A recipe has the following properties:
name (String)
description (String)
ingredients (Array of strings)
instructions (String)
createdAt (Timestamp)
updatedAt (Timestamp)

Frontend Requirements:

Create a recipe management interface with the following features:
Display a list of all recipes.
Allow users to create new recipes by providing a name, description, list of ingredients, and instructions.
Allow users to view and edit a recipe's details.

General Guidelines:
Use Git for version control and create a repository for the project.
Include a README file with instructions on how to set up and run the application.
Write clean, maintainable, and well-documented code.
Use best practices for error handling and security.
Implement appropriate RESTful API design principles.
Apply responsive design principles to ensure the application works well on different screen sizes.

Submission Guidelines:
Share your Git repository with the hiring team at least an hour before the interview.
Provide clear instructions on how to set up and run the application locally.
Include any additional notes or explanations you feel are necessary.

Bonus Points (Optional):
Implement user authentication and authorization using a JWT-based system.
Implement full-text search functionality to allow users to search for recipes based on their names and ingredients.
Add image upload functionality for recipes.
Implement a search functionality that filters recipes based on their names and ingredients.
Implement appropriate form validation and error handling.

{
"\_id": "1",
"name": "Spaghetti Bolognese",
"description": "A classic Italian pasta dish.",
"ingredients": ["spaghetti", "minced beef", "onion", "garlic", "tomato sauce"],
"instructions": "Cook spaghetti. In a pan, cook minced beef with onion and garlic, then add tomato sauce...",
"image": "/uploads/spaghetti.jpg",
"createdAt": "2023-01-01T12:00:00Z",
"updatedAt": "2023-01-01T12:00:00Z"
}
